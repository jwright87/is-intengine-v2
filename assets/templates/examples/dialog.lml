<:error>Expected!</:error>

<!-- Actually, this app is programmed to
    show a dialog each time a parsing
    error occurs - so we forced an error.
    This is the original template content:" -->
<:comment>
<!-- oneColumn attribute sets content table as one-column-only,
    because this is the main table for dialogs. -->
<dialog title="@error" style="dialog" oneColumn="true">
    <imageButton style="close-window" toTitleTable="true"
        expandX="true" align="right" onChange="closeDialog" />
    <:for line="@errorLine[0,3]">
        <label>{line}</label>
    </:for>
    <textButton onResult="onErrorApprove" growX="true">@ok</textButton>
    <textButton onResult="onErrorDecline" growX="true">@no</textButton>
    <!-- toDialogTable appends label to dialog itself,
         not its content table. This might screw with
         dialog's look if you add more than one column. -->
    <label id="resultMessage" toDialogTable="true">@errorPrompt</label>
</dialog>
</:comment>

<!-- Dialogs are extended windows that can link their
    button children with actions (onResult attribute).
    If the action returns boolean "true", dialog hiding
    is cancelled. Each dialog manages 4 tables: itself, title,
    content and button tables. Content table is default;
    to fill other tables, use toButtonTable, toDialogTable
    and toTitleTable attributes in dialog children tags.
    Since dialogs manage a label component (title), they
    can also have label attributes. -->
