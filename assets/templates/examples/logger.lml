<!-- LibGDX logging utilities can be used from
    within LML templates. This is especially useful
    for debugging. Logger macros parse arguments
    (using {this} syntax), but will not evaluate
    tags or other macros between their tags. -->

<label>Check your console.</label>

<!-- Both content between tags and attributes
    are logged. -->
<:log>Info.</:log>
<:log> Will be logged. />

<!-- There are three logging levels, matching
    Application interface methods: debug,
    info (standard "log" method) and error.
    Since :error macro throws an exception,
    "logError" alias must be used for logging
    errors. -->
<:debug>Debug log: {someArgument}</:debug>
<:info>Info log: {someArgument}</:info>
<:logError>Error log: {someArgument}</:logError>

<!-- Logs of all levels can be disabled with
    Lml class. This class also allows to modify
    the logger tag, logged with all messages
    (defaults to "LML"). -->

<!-- You can optionally use named attribute: "log".
     It will allow you to create valid XML data,
     while keeping logger tags closed. -->

<:info log="Logged using named attribute." />
