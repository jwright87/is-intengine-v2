<!-- LML has a pretty powerful equation parser that handles
    int, float, boolean and String types (determined at
    runtime) and a number of operators. Conditional macro
    allows to evaluate an equation to a boolean value and
    display some part of template only if the result is
    "true". If the equation returns a number, it will be
    converted to "true" if it is larger than 0. If it returns
    a string, it cannot be null, "null" or blank. -->

<:if 3 < 7 & 8/2 = 4>
    <label>Should be displayed.</label>
</:if>

<!-- '>' sign as to be escaped with '&gt' in tags, as it
    also marks the end of tag. Optional "test" attribute
    can be used to create valid XML. -->

<table defaultSize=24 defaultPad=1>
    <:loop times="9">
        <:if test="{loop:index}%3 = 0">
            <:row/>
        </:if>
        <button/>
    </:loop>
</table>

<!-- Else tag can be supplied to provide an alternative
    if the equation evaluates to false. -->
    
<:if (7.4*1.2)^0.3 - 84>
    <label>Number is positive.</label>
<:if:else/>
    <label>Number is negative.</label>
</:if>
    
<!-- As with any conditional macro, "else" tag is optional and
    follows this syntax: <:tagName:else/>, where "tagName" is
    the name of conditional macro tag you used. -->